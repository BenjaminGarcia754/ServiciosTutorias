#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ProyectoTutorias.Modelo
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="proyectoEscolarUVTutorias")]
	public partial class DataClassesProyectoTutoriasDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertExperienciaEducativa(ExperienciaEducativa instance);
    partial void UpdateExperienciaEducativa(ExperienciaEducativa instance);
    partial void DeleteExperienciaEducativa(ExperienciaEducativa instance);
    partial void InsertInformacionTutoria(InformacionTutoria instance);
    partial void UpdateInformacionTutoria(InformacionTutoria instance);
    partial void DeleteInformacionTutoria(InformacionTutoria instance);
    partial void InsertMateria(Materia instance);
    partial void UpdateMateria(Materia instance);
    partial void DeleteMateria(Materia instance);
    partial void InsertPeriodoEscolar(PeriodoEscolar instance);
    partial void UpdatePeriodoEscolar(PeriodoEscolar instance);
    partial void DeletePeriodoEscolar(PeriodoEscolar instance);
    partial void InsertProblematica(Problematica instance);
    partial void UpdateProblematica(Problematica instance);
    partial void DeleteProblematica(Problematica instance);
    partial void InsertProfesor(Profesor instance);
    partial void UpdateProfesor(Profesor instance);
    partial void DeleteProfesor(Profesor instance);
    partial void InsertProgramaEducativo(ProgramaEducativo instance);
    partial void UpdateProgramaEducativo(ProgramaEducativo instance);
    partial void DeleteProgramaEducativo(ProgramaEducativo instance);
    partial void InsertReporteTutoria(ReporteTutoria instance);
    partial void UpdateReporteTutoria(ReporteTutoria instance);
    partial void DeleteReporteTutoria(ReporteTutoria instance);
    partial void InsertRol(Rol instance);
    partial void UpdateRol(Rol instance);
    partial void DeleteRol(Rol instance);
    partial void InsertSolucion(Solucion instance);
    partial void UpdateSolucion(Solucion instance);
    partial void DeleteSolucion(Solucion instance);
    partial void InsertTipoProblematica(TipoProblematica instance);
    partial void UpdateTipoProblematica(TipoProblematica instance);
    partial void DeleteTipoProblematica(TipoProblematica instance);
    partial void InsertTutorado(Tutorado instance);
    partial void UpdateTutorado(Tutorado instance);
    partial void DeleteTutorado(Tutorado instance);
    partial void InsertTutoria(Tutoria instance);
    partial void UpdateTutoria(Tutoria instance);
    partial void DeleteTutoria(Tutoria instance);
    partial void InsertUsuarioSesion(UsuarioSesion instance);
    partial void UpdateUsuarioSesion(UsuarioSesion instance);
    partial void DeleteUsuarioSesion(UsuarioSesion instance);
    partial void InsertHorarioTutoria(HorarioTutoria instance);
    partial void UpdateHorarioTutoria(HorarioTutoria instance);
    partial void DeleteHorarioTutoria(HorarioTutoria instance);
    #endregion
		
		public DataClassesProyectoTutoriasDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesProyectoTutoriasDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesProyectoTutoriasDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesProyectoTutoriasDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ExperienciaEducativa> ExperienciaEducativa
		{
			get
			{
				return this.GetTable<ExperienciaEducativa>();
			}
		}
		
		public System.Data.Linq.Table<InformacionTutoria> InformacionTutoria
		{
			get
			{
				return this.GetTable<InformacionTutoria>();
			}
		}
		
		public System.Data.Linq.Table<Materia> Materia
		{
			get
			{
				return this.GetTable<Materia>();
			}
		}
		
		public System.Data.Linq.Table<PeriodoEscolar> PeriodoEscolar
		{
			get
			{
				return this.GetTable<PeriodoEscolar>();
			}
		}
		
		public System.Data.Linq.Table<Problematica> Problematica
		{
			get
			{
				return this.GetTable<Problematica>();
			}
		}
		
		public System.Data.Linq.Table<Profesor> Profesor
		{
			get
			{
				return this.GetTable<Profesor>();
			}
		}
		
		public System.Data.Linq.Table<ProgramaEducativo> ProgramaEducativo
		{
			get
			{
				return this.GetTable<ProgramaEducativo>();
			}
		}
		
		public System.Data.Linq.Table<ReporteTutoria> ReporteTutoria
		{
			get
			{
				return this.GetTable<ReporteTutoria>();
			}
		}
		
		public System.Data.Linq.Table<Rol> Rol
		{
			get
			{
				return this.GetTable<Rol>();
			}
		}
		
		public System.Data.Linq.Table<Solucion> Solucion
		{
			get
			{
				return this.GetTable<Solucion>();
			}
		}
		
		public System.Data.Linq.Table<TipoProblematica> TipoProblematica
		{
			get
			{
				return this.GetTable<TipoProblematica>();
			}
		}
		
		public System.Data.Linq.Table<Tutorado> Tutorado
		{
			get
			{
				return this.GetTable<Tutorado>();
			}
		}
		
		public System.Data.Linq.Table<Tutoria> Tutoria
		{
			get
			{
				return this.GetTable<Tutoria>();
			}
		}
		
		public System.Data.Linq.Table<UsuarioSesion> UsuarioSesion
		{
			get
			{
				return this.GetTable<UsuarioSesion>();
			}
		}
		
		public System.Data.Linq.Table<HorarioTutoria> HorarioTutorias
		{
			get
			{
				return this.GetTable<HorarioTutoria>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ExperienciaEducativa")]
	public partial class ExperienciaEducativa : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idExperienciaEducativa;
		
		private int _idProfesor;
		
		private int _idMateria;
		
		private int _idPeriodo;
		
		private string _nrc;
		
		private EntityRef<Materia> _Materia;
		
		private EntityRef<PeriodoEscolar> _PeriodoEscolar;
		
		private EntityRef<Profesor> _Profesor;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidExperienciaEducativaChanging(int value);
    partial void OnidExperienciaEducativaChanged();
    partial void OnidProfesorChanging(int value);
    partial void OnidProfesorChanged();
    partial void OnidMateriaChanging(int value);
    partial void OnidMateriaChanged();
    partial void OnidPeriodoChanging(int value);
    partial void OnidPeriodoChanged();
    partial void OnnrcChanging(string value);
    partial void OnnrcChanged();
    #endregion
		
		public ExperienciaEducativa()
		{
			this._Materia = default(EntityRef<Materia>);
			this._PeriodoEscolar = default(EntityRef<PeriodoEscolar>);
			this._Profesor = default(EntityRef<Profesor>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idExperienciaEducativa", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idExperienciaEducativa
		{
			get
			{
				return this._idExperienciaEducativa;
			}
			set
			{
				if ((this._idExperienciaEducativa != value))
				{
					this.OnidExperienciaEducativaChanging(value);
					this.SendPropertyChanging();
					this._idExperienciaEducativa = value;
					this.SendPropertyChanged("idExperienciaEducativa");
					this.OnidExperienciaEducativaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idProfesor", DbType="Int NOT NULL")]
		public int idProfesor
		{
			get
			{
				return this._idProfesor;
			}
			set
			{
				if ((this._idProfesor != value))
				{
					if (this._Profesor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidProfesorChanging(value);
					this.SendPropertyChanging();
					this._idProfesor = value;
					this.SendPropertyChanged("idProfesor");
					this.OnidProfesorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idMateria", DbType="Int NOT NULL")]
		public int idMateria
		{
			get
			{
				return this._idMateria;
			}
			set
			{
				if ((this._idMateria != value))
				{
					if (this._Materia.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidMateriaChanging(value);
					this.SendPropertyChanging();
					this._idMateria = value;
					this.SendPropertyChanged("idMateria");
					this.OnidMateriaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idPeriodo", DbType="Int NOT NULL")]
		public int idPeriodo
		{
			get
			{
				return this._idPeriodo;
			}
			set
			{
				if ((this._idPeriodo != value))
				{
					if (this._PeriodoEscolar.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidPeriodoChanging(value);
					this.SendPropertyChanging();
					this._idPeriodo = value;
					this.SendPropertyChanged("idPeriodo");
					this.OnidPeriodoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nrc", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string nrc
		{
			get
			{
				return this._nrc;
			}
			set
			{
				if ((this._nrc != value))
				{
					this.OnnrcChanging(value);
					this.SendPropertyChanging();
					this._nrc = value;
					this.SendPropertyChanged("nrc");
					this.OnnrcChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Materia_ExperienciaEducativa", Storage="_Materia", ThisKey="idMateria", OtherKey="idMateria", IsForeignKey=true)]
		public Materia Materia
		{
			get
			{
				return this._Materia.Entity;
			}
			set
			{
				Materia previousValue = this._Materia.Entity;
				if (((previousValue != value) 
							|| (this._Materia.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Materia.Entity = null;
						previousValue.ExperienciaEducativa.Remove(this);
					}
					this._Materia.Entity = value;
					if ((value != null))
					{
						value.ExperienciaEducativa.Add(this);
						this._idMateria = value.idMateria;
					}
					else
					{
						this._idMateria = default(int);
					}
					this.SendPropertyChanged("Materia");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PeriodoEscolar_ExperienciaEducativa", Storage="_PeriodoEscolar", ThisKey="idPeriodo", OtherKey="idPeriodo", IsForeignKey=true)]
		public PeriodoEscolar PeriodoEscolar
		{
			get
			{
				return this._PeriodoEscolar.Entity;
			}
			set
			{
				PeriodoEscolar previousValue = this._PeriodoEscolar.Entity;
				if (((previousValue != value) 
							|| (this._PeriodoEscolar.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PeriodoEscolar.Entity = null;
						previousValue.ExperienciaEducativa.Remove(this);
					}
					this._PeriodoEscolar.Entity = value;
					if ((value != null))
					{
						value.ExperienciaEducativa.Add(this);
						this._idPeriodo = value.idPeriodo;
					}
					else
					{
						this._idPeriodo = default(int);
					}
					this.SendPropertyChanged("PeriodoEscolar");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Profesor_ExperienciaEducativa", Storage="_Profesor", ThisKey="idProfesor", OtherKey="idProfesor", IsForeignKey=true)]
		public Profesor Profesor
		{
			get
			{
				return this._Profesor.Entity;
			}
			set
			{
				Profesor previousValue = this._Profesor.Entity;
				if (((previousValue != value) 
							|| (this._Profesor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Profesor.Entity = null;
						previousValue.ExperienciaEducativa.Remove(this);
					}
					this._Profesor.Entity = value;
					if ((value != null))
					{
						value.ExperienciaEducativa.Add(this);
						this._idProfesor = value.idProfesor;
					}
					else
					{
						this._idProfesor = default(int);
					}
					this.SendPropertyChanged("Profesor");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InformacionTutoria")]
	public partial class InformacionTutoria : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idInformacionTutoria;
		
		private int _idPeriodoEscolar;
		
		private int _noSesion;
		
		private string _fechaSesion;
		
		private string _fechaEntrega;
		
		private EntitySet<Tutoria> _Tutoria;
		
		private EntityRef<PeriodoEscolar> _PeriodoEscolar;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidInformacionTutoriaChanging(int value);
    partial void OnidInformacionTutoriaChanged();
    partial void OnidPeriodoEscolarChanging(int value);
    partial void OnidPeriodoEscolarChanged();
    partial void OnnoSesionChanging(int value);
    partial void OnnoSesionChanged();
    partial void OnfechaSesionChanging(string value);
    partial void OnfechaSesionChanged();
    partial void OnfechaEntregaChanging(string value);
    partial void OnfechaEntregaChanged();
    #endregion
		
		public InformacionTutoria()
		{
			this._Tutoria = new EntitySet<Tutoria>(new Action<Tutoria>(this.attach_Tutoria), new Action<Tutoria>(this.detach_Tutoria));
			this._PeriodoEscolar = default(EntityRef<PeriodoEscolar>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idInformacionTutoria", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idInformacionTutoria
		{
			get
			{
				return this._idInformacionTutoria;
			}
			set
			{
				if ((this._idInformacionTutoria != value))
				{
					this.OnidInformacionTutoriaChanging(value);
					this.SendPropertyChanging();
					this._idInformacionTutoria = value;
					this.SendPropertyChanged("idInformacionTutoria");
					this.OnidInformacionTutoriaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idPeriodoEscolar", DbType="Int NOT NULL")]
		public int idPeriodoEscolar
		{
			get
			{
				return this._idPeriodoEscolar;
			}
			set
			{
				if ((this._idPeriodoEscolar != value))
				{
					if (this._PeriodoEscolar.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidPeriodoEscolarChanging(value);
					this.SendPropertyChanging();
					this._idPeriodoEscolar = value;
					this.SendPropertyChanged("idPeriodoEscolar");
					this.OnidPeriodoEscolarChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_noSesion", DbType="Int NOT NULL")]
		public int noSesion
		{
			get
			{
				return this._noSesion;
			}
			set
			{
				if ((this._noSesion != value))
				{
					this.OnnoSesionChanging(value);
					this.SendPropertyChanging();
					this._noSesion = value;
					this.SendPropertyChanged("noSesion");
					this.OnnoSesionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fechaSesion", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string fechaSesion
		{
			get
			{
				return this._fechaSesion;
			}
			set
			{
				if ((this._fechaSesion != value))
				{
					this.OnfechaSesionChanging(value);
					this.SendPropertyChanging();
					this._fechaSesion = value;
					this.SendPropertyChanged("fechaSesion");
					this.OnfechaSesionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fechaEntrega", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string fechaEntrega
		{
			get
			{
				return this._fechaEntrega;
			}
			set
			{
				if ((this._fechaEntrega != value))
				{
					this.OnfechaEntregaChanging(value);
					this.SendPropertyChanging();
					this._fechaEntrega = value;
					this.SendPropertyChanged("fechaEntrega");
					this.OnfechaEntregaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InformacionTutoria_Tutoria", Storage="_Tutoria", ThisKey="idInformacionTutoria", OtherKey="idInformacionTutoria")]
		public EntitySet<Tutoria> Tutoria
		{
			get
			{
				return this._Tutoria;
			}
			set
			{
				this._Tutoria.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PeriodoEscolar_InformacionTutoria", Storage="_PeriodoEscolar", ThisKey="idPeriodoEscolar", OtherKey="idPeriodo", IsForeignKey=true)]
		public PeriodoEscolar PeriodoEscolar
		{
			get
			{
				return this._PeriodoEscolar.Entity;
			}
			set
			{
				PeriodoEscolar previousValue = this._PeriodoEscolar.Entity;
				if (((previousValue != value) 
							|| (this._PeriodoEscolar.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PeriodoEscolar.Entity = null;
						previousValue.InformacionTutoria.Remove(this);
					}
					this._PeriodoEscolar.Entity = value;
					if ((value != null))
					{
						value.InformacionTutoria.Add(this);
						this._idPeriodoEscolar = value.idPeriodo;
					}
					else
					{
						this._idPeriodoEscolar = default(int);
					}
					this.SendPropertyChanged("PeriodoEscolar");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Tutoria(Tutoria entity)
		{
			this.SendPropertyChanging();
			entity.InformacionTutoria = this;
		}
		
		private void detach_Tutoria(Tutoria entity)
		{
			this.SendPropertyChanging();
			entity.InformacionTutoria = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Materia")]
	public partial class Materia : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idMateria;
		
		private string _nombreMateria;
		
		private EntitySet<ExperienciaEducativa> _ExperienciaEducativa;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidMateriaChanging(int value);
    partial void OnidMateriaChanged();
    partial void OnnombreMateriaChanging(string value);
    partial void OnnombreMateriaChanged();
    #endregion
		
		public Materia()
		{
			this._ExperienciaEducativa = new EntitySet<ExperienciaEducativa>(new Action<ExperienciaEducativa>(this.attach_ExperienciaEducativa), new Action<ExperienciaEducativa>(this.detach_ExperienciaEducativa));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idMateria", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idMateria
		{
			get
			{
				return this._idMateria;
			}
			set
			{
				if ((this._idMateria != value))
				{
					this.OnidMateriaChanging(value);
					this.SendPropertyChanging();
					this._idMateria = value;
					this.SendPropertyChanged("idMateria");
					this.OnidMateriaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nombreMateria", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string nombreMateria
		{
			get
			{
				return this._nombreMateria;
			}
			set
			{
				if ((this._nombreMateria != value))
				{
					this.OnnombreMateriaChanging(value);
					this.SendPropertyChanging();
					this._nombreMateria = value;
					this.SendPropertyChanged("nombreMateria");
					this.OnnombreMateriaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Materia_ExperienciaEducativa", Storage="_ExperienciaEducativa", ThisKey="idMateria", OtherKey="idMateria")]
		public EntitySet<ExperienciaEducativa> ExperienciaEducativa
		{
			get
			{
				return this._ExperienciaEducativa;
			}
			set
			{
				this._ExperienciaEducativa.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ExperienciaEducativa(ExperienciaEducativa entity)
		{
			this.SendPropertyChanging();
			entity.Materia = this;
		}
		
		private void detach_ExperienciaEducativa(ExperienciaEducativa entity)
		{
			this.SendPropertyChanging();
			entity.Materia = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PeriodoEscolar")]
	public partial class PeriodoEscolar : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idPeriodo;
		
		private string _descripcionFecha;
		
		private EntitySet<ExperienciaEducativa> _ExperienciaEducativa;
		
		private EntitySet<InformacionTutoria> _InformacionTutoria;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidPeriodoChanging(int value);
    partial void OnidPeriodoChanged();
    partial void OndescripcionFechaChanging(string value);
    partial void OndescripcionFechaChanged();
    #endregion
		
		public PeriodoEscolar()
		{
			this._ExperienciaEducativa = new EntitySet<ExperienciaEducativa>(new Action<ExperienciaEducativa>(this.attach_ExperienciaEducativa), new Action<ExperienciaEducativa>(this.detach_ExperienciaEducativa));
			this._InformacionTutoria = new EntitySet<InformacionTutoria>(new Action<InformacionTutoria>(this.attach_InformacionTutoria), new Action<InformacionTutoria>(this.detach_InformacionTutoria));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idPeriodo", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idPeriodo
		{
			get
			{
				return this._idPeriodo;
			}
			set
			{
				if ((this._idPeriodo != value))
				{
					this.OnidPeriodoChanging(value);
					this.SendPropertyChanging();
					this._idPeriodo = value;
					this.SendPropertyChanged("idPeriodo");
					this.OnidPeriodoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_descripcionFecha", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string descripcionFecha
		{
			get
			{
				return this._descripcionFecha;
			}
			set
			{
				if ((this._descripcionFecha != value))
				{
					this.OndescripcionFechaChanging(value);
					this.SendPropertyChanging();
					this._descripcionFecha = value;
					this.SendPropertyChanged("descripcionFecha");
					this.OndescripcionFechaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PeriodoEscolar_ExperienciaEducativa", Storage="_ExperienciaEducativa", ThisKey="idPeriodo", OtherKey="idPeriodo")]
		public EntitySet<ExperienciaEducativa> ExperienciaEducativa
		{
			get
			{
				return this._ExperienciaEducativa;
			}
			set
			{
				this._ExperienciaEducativa.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PeriodoEscolar_InformacionTutoria", Storage="_InformacionTutoria", ThisKey="idPeriodo", OtherKey="idPeriodoEscolar")]
		public EntitySet<InformacionTutoria> InformacionTutoria
		{
			get
			{
				return this._InformacionTutoria;
			}
			set
			{
				this._InformacionTutoria.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ExperienciaEducativa(ExperienciaEducativa entity)
		{
			this.SendPropertyChanging();
			entity.PeriodoEscolar = this;
		}
		
		private void detach_ExperienciaEducativa(ExperienciaEducativa entity)
		{
			this.SendPropertyChanging();
			entity.PeriodoEscolar = null;
		}
		
		private void attach_InformacionTutoria(InformacionTutoria entity)
		{
			this.SendPropertyChanging();
			entity.PeriodoEscolar = this;
		}
		
		private void detach_InformacionTutoria(InformacionTutoria entity)
		{
			this.SendPropertyChanging();
			entity.PeriodoEscolar = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Problematica")]
	public partial class Problematica : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idProblematica;
		
		private int _idReporteTutoria;
		
		private string _descripcion;
		
		private int _noIncidencias;
		
		private int _idTipo;
		
		private EntitySet<Solucion> _Solucion;
		
		private EntityRef<ReporteTutoria> _ReporteTutoria;
		
		private EntityRef<TipoProblematica> _TipoProblematica;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidProblematicaChanging(int value);
    partial void OnidProblematicaChanged();
    partial void OnidReporteTutoriaChanging(int value);
    partial void OnidReporteTutoriaChanged();
    partial void OndescripcionChanging(string value);
    partial void OndescripcionChanged();
    partial void OnnoIncidenciasChanging(int value);
    partial void OnnoIncidenciasChanged();
    partial void OnidTipoChanging(int value);
    partial void OnidTipoChanged();
    #endregion
		
		public Problematica()
		{
			this._Solucion = new EntitySet<Solucion>(new Action<Solucion>(this.attach_Solucion), new Action<Solucion>(this.detach_Solucion));
			this._ReporteTutoria = default(EntityRef<ReporteTutoria>);
			this._TipoProblematica = default(EntityRef<TipoProblematica>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idProblematica", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idProblematica
		{
			get
			{
				return this._idProblematica;
			}
			set
			{
				if ((this._idProblematica != value))
				{
					this.OnidProblematicaChanging(value);
					this.SendPropertyChanging();
					this._idProblematica = value;
					this.SendPropertyChanged("idProblematica");
					this.OnidProblematicaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idReporteTutoria", DbType="Int NOT NULL")]
		public int idReporteTutoria
		{
			get
			{
				return this._idReporteTutoria;
			}
			set
			{
				if ((this._idReporteTutoria != value))
				{
					if (this._ReporteTutoria.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidReporteTutoriaChanging(value);
					this.SendPropertyChanging();
					this._idReporteTutoria = value;
					this.SendPropertyChanged("idReporteTutoria");
					this.OnidReporteTutoriaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_descripcion", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string descripcion
		{
			get
			{
				return this._descripcion;
			}
			set
			{
				if ((this._descripcion != value))
				{
					this.OndescripcionChanging(value);
					this.SendPropertyChanging();
					this._descripcion = value;
					this.SendPropertyChanged("descripcion");
					this.OndescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_noIncidencias", DbType="Int NOT NULL")]
		public int noIncidencias
		{
			get
			{
				return this._noIncidencias;
			}
			set
			{
				if ((this._noIncidencias != value))
				{
					this.OnnoIncidenciasChanging(value);
					this.SendPropertyChanging();
					this._noIncidencias = value;
					this.SendPropertyChanged("noIncidencias");
					this.OnnoIncidenciasChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idTipo", DbType="Int NOT NULL")]
		public int idTipo
		{
			get
			{
				return this._idTipo;
			}
			set
			{
				if ((this._idTipo != value))
				{
					if (this._TipoProblematica.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidTipoChanging(value);
					this.SendPropertyChanging();
					this._idTipo = value;
					this.SendPropertyChanged("idTipo");
					this.OnidTipoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Problematica_Solucion", Storage="_Solucion", ThisKey="idProblematica", OtherKey="idProblematica")]
		public EntitySet<Solucion> Solucion
		{
			get
			{
				return this._Solucion;
			}
			set
			{
				this._Solucion.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ReporteTutoria_Problematica", Storage="_ReporteTutoria", ThisKey="idReporteTutoria", OtherKey="idReporteTutoria", IsForeignKey=true)]
		public ReporteTutoria ReporteTutoria
		{
			get
			{
				return this._ReporteTutoria.Entity;
			}
			set
			{
				ReporteTutoria previousValue = this._ReporteTutoria.Entity;
				if (((previousValue != value) 
							|| (this._ReporteTutoria.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ReporteTutoria.Entity = null;
						previousValue.Problematica.Remove(this);
					}
					this._ReporteTutoria.Entity = value;
					if ((value != null))
					{
						value.Problematica.Add(this);
						this._idReporteTutoria = value.idReporteTutoria;
					}
					else
					{
						this._idReporteTutoria = default(int);
					}
					this.SendPropertyChanged("ReporteTutoria");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TipoProblematica_Problematica", Storage="_TipoProblematica", ThisKey="idTipo", OtherKey="idTipoProblematica", IsForeignKey=true)]
		public TipoProblematica TipoProblematica
		{
			get
			{
				return this._TipoProblematica.Entity;
			}
			set
			{
				TipoProblematica previousValue = this._TipoProblematica.Entity;
				if (((previousValue != value) 
							|| (this._TipoProblematica.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TipoProblematica.Entity = null;
						previousValue.Problematica.Remove(this);
					}
					this._TipoProblematica.Entity = value;
					if ((value != null))
					{
						value.Problematica.Add(this);
						this._idTipo = value.idTipoProblematica;
					}
					else
					{
						this._idTipo = default(int);
					}
					this.SendPropertyChanged("TipoProblematica");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Solucion(Solucion entity)
		{
			this.SendPropertyChanging();
			entity.Problematica = this;
		}
		
		private void detach_Solucion(Solucion entity)
		{
			this.SendPropertyChanging();
			entity.Problematica = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Profesor")]
	public partial class Profesor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idProfesor;
		
		private int _idRol;
		
		private string _nombre;
		
		private string _numeroDeEmpleado;
		
		private string _telefono;
		
		private EntitySet<ExperienciaEducativa> _ExperienciaEducativa;
		
		private EntitySet<ProgramaEducativo> _ProgramaEducativo;
		
		private EntitySet<ReporteTutoria> _ReporteTutoria;
		
		private EntitySet<Solucion> _Solucion;
		
		private EntitySet<Tutorado> _Tutorado;
		
		private EntitySet<Tutoria> _Tutoria;
		
		private EntitySet<HorarioTutoria> _HorarioTutorias;
		
		private EntityRef<Rol> _Rol;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidProfesorChanging(int value);
    partial void OnidProfesorChanged();
    partial void OnidRolChanging(int value);
    partial void OnidRolChanged();
    partial void OnnombreChanging(string value);
    partial void OnnombreChanged();
    partial void OnnumeroDeEmpleadoChanging(string value);
    partial void OnnumeroDeEmpleadoChanged();
    partial void OntelefonoChanging(string value);
    partial void OntelefonoChanged();
    #endregion
		
		public Profesor()
		{
			this._ExperienciaEducativa = new EntitySet<ExperienciaEducativa>(new Action<ExperienciaEducativa>(this.attach_ExperienciaEducativa), new Action<ExperienciaEducativa>(this.detach_ExperienciaEducativa));
			this._ProgramaEducativo = new EntitySet<ProgramaEducativo>(new Action<ProgramaEducativo>(this.attach_ProgramaEducativo), new Action<ProgramaEducativo>(this.detach_ProgramaEducativo));
			this._ReporteTutoria = new EntitySet<ReporteTutoria>(new Action<ReporteTutoria>(this.attach_ReporteTutoria), new Action<ReporteTutoria>(this.detach_ReporteTutoria));
			this._Solucion = new EntitySet<Solucion>(new Action<Solucion>(this.attach_Solucion), new Action<Solucion>(this.detach_Solucion));
			this._Tutorado = new EntitySet<Tutorado>(new Action<Tutorado>(this.attach_Tutorado), new Action<Tutorado>(this.detach_Tutorado));
			this._Tutoria = new EntitySet<Tutoria>(new Action<Tutoria>(this.attach_Tutoria), new Action<Tutoria>(this.detach_Tutoria));
			this._HorarioTutorias = new EntitySet<HorarioTutoria>(new Action<HorarioTutoria>(this.attach_HorarioTutorias), new Action<HorarioTutoria>(this.detach_HorarioTutorias));
			this._Rol = default(EntityRef<Rol>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idProfesor", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idProfesor
		{
			get
			{
				return this._idProfesor;
			}
			set
			{
				if ((this._idProfesor != value))
				{
					this.OnidProfesorChanging(value);
					this.SendPropertyChanging();
					this._idProfesor = value;
					this.SendPropertyChanged("idProfesor");
					this.OnidProfesorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idRol", DbType="Int NOT NULL")]
		public int idRol
		{
			get
			{
				return this._idRol;
			}
			set
			{
				if ((this._idRol != value))
				{
					if (this._Rol.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidRolChanging(value);
					this.SendPropertyChanging();
					this._idRol = value;
					this.SendPropertyChanged("idRol");
					this.OnidRolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nombre", DbType="VarChar(75) NOT NULL", CanBeNull=false)]
		public string nombre
		{
			get
			{
				return this._nombre;
			}
			set
			{
				if ((this._nombre != value))
				{
					this.OnnombreChanging(value);
					this.SendPropertyChanging();
					this._nombre = value;
					this.SendPropertyChanged("nombre");
					this.OnnombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_numeroDeEmpleado", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string numeroDeEmpleado
		{
			get
			{
				return this._numeroDeEmpleado;
			}
			set
			{
				if ((this._numeroDeEmpleado != value))
				{
					this.OnnumeroDeEmpleadoChanging(value);
					this.SendPropertyChanging();
					this._numeroDeEmpleado = value;
					this.SendPropertyChanged("numeroDeEmpleado");
					this.OnnumeroDeEmpleadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_telefono", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string telefono
		{
			get
			{
				return this._telefono;
			}
			set
			{
				if ((this._telefono != value))
				{
					this.OntelefonoChanging(value);
					this.SendPropertyChanging();
					this._telefono = value;
					this.SendPropertyChanged("telefono");
					this.OntelefonoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Profesor_ExperienciaEducativa", Storage="_ExperienciaEducativa", ThisKey="idProfesor", OtherKey="idProfesor")]
		public EntitySet<ExperienciaEducativa> ExperienciaEducativa
		{
			get
			{
				return this._ExperienciaEducativa;
			}
			set
			{
				this._ExperienciaEducativa.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Profesor_ProgramaEducativo", Storage="_ProgramaEducativo", ThisKey="idProfesor", OtherKey="idCoordinador")]
		public EntitySet<ProgramaEducativo> ProgramaEducativo
		{
			get
			{
				return this._ProgramaEducativo;
			}
			set
			{
				this._ProgramaEducativo.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Profesor_ReporteTutoria", Storage="_ReporteTutoria", ThisKey="idProfesor", OtherKey="idTutor")]
		public EntitySet<ReporteTutoria> ReporteTutoria
		{
			get
			{
				return this._ReporteTutoria;
			}
			set
			{
				this._ReporteTutoria.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Profesor_Solucion", Storage="_Solucion", ThisKey="idProfesor", OtherKey="idAcademico")]
		public EntitySet<Solucion> Solucion
		{
			get
			{
				return this._Solucion;
			}
			set
			{
				this._Solucion.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Profesor_Tutorado", Storage="_Tutorado", ThisKey="idProfesor", OtherKey="tutorAcademico")]
		public EntitySet<Tutorado> Tutorado
		{
			get
			{
				return this._Tutorado;
			}
			set
			{
				this._Tutorado.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Profesor_Tutoria", Storage="_Tutoria", ThisKey="idProfesor", OtherKey="idTutor")]
		public EntitySet<Tutoria> Tutoria
		{
			get
			{
				return this._Tutoria;
			}
			set
			{
				this._Tutoria.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Profesor_HorarioTutoria", Storage="_HorarioTutorias", ThisKey="idProfesor", OtherKey="idTutor")]
		public EntitySet<HorarioTutoria> HorarioTutorias
		{
			get
			{
				return this._HorarioTutorias;
			}
			set
			{
				this._HorarioTutorias.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Rol_Profesor", Storage="_Rol", ThisKey="idRol", OtherKey="idRol", IsForeignKey=true)]
		public Rol Rol
		{
			get
			{
				return this._Rol.Entity;
			}
			set
			{
				Rol previousValue = this._Rol.Entity;
				if (((previousValue != value) 
							|| (this._Rol.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Rol.Entity = null;
						previousValue.Profesor.Remove(this);
					}
					this._Rol.Entity = value;
					if ((value != null))
					{
						value.Profesor.Add(this);
						this._idRol = value.idRol;
					}
					else
					{
						this._idRol = default(int);
					}
					this.SendPropertyChanged("Rol");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ExperienciaEducativa(ExperienciaEducativa entity)
		{
			this.SendPropertyChanging();
			entity.Profesor = this;
		}
		
		private void detach_ExperienciaEducativa(ExperienciaEducativa entity)
		{
			this.SendPropertyChanging();
			entity.Profesor = null;
		}
		
		private void attach_ProgramaEducativo(ProgramaEducativo entity)
		{
			this.SendPropertyChanging();
			entity.Profesor = this;
		}
		
		private void detach_ProgramaEducativo(ProgramaEducativo entity)
		{
			this.SendPropertyChanging();
			entity.Profesor = null;
		}
		
		private void attach_ReporteTutoria(ReporteTutoria entity)
		{
			this.SendPropertyChanging();
			entity.Profesor = this;
		}
		
		private void detach_ReporteTutoria(ReporteTutoria entity)
		{
			this.SendPropertyChanging();
			entity.Profesor = null;
		}
		
		private void attach_Solucion(Solucion entity)
		{
			this.SendPropertyChanging();
			entity.Profesor = this;
		}
		
		private void detach_Solucion(Solucion entity)
		{
			this.SendPropertyChanging();
			entity.Profesor = null;
		}
		
		private void attach_Tutorado(Tutorado entity)
		{
			this.SendPropertyChanging();
			entity.Profesor = this;
		}
		
		private void detach_Tutorado(Tutorado entity)
		{
			this.SendPropertyChanging();
			entity.Profesor = null;
		}
		
		private void attach_Tutoria(Tutoria entity)
		{
			this.SendPropertyChanging();
			entity.Profesor = this;
		}
		
		private void detach_Tutoria(Tutoria entity)
		{
			this.SendPropertyChanging();
			entity.Profesor = null;
		}
		
		private void attach_HorarioTutorias(HorarioTutoria entity)
		{
			this.SendPropertyChanging();
			entity.Profesor = this;
		}
		
		private void detach_HorarioTutorias(HorarioTutoria entity)
		{
			this.SendPropertyChanging();
			entity.Profesor = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProgramaEducativo")]
	public partial class ProgramaEducativo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idProgramaEducativo;
		
		private int _idCoordinador;
		
		private int _anio;
		
		private string _area;
		
		private string _carrera;
		
		private string _clave;
		
		private EntitySet<ReporteTutoria> _ReporteTutoria;
		
		private EntitySet<Tutorado> _Tutorado;
		
		private EntityRef<Profesor> _Profesor;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidProgramaEducativoChanging(int value);
    partial void OnidProgramaEducativoChanged();
    partial void OnidCoordinadorChanging(int value);
    partial void OnidCoordinadorChanged();
    partial void OnanioChanging(int value);
    partial void OnanioChanged();
    partial void OnareaChanging(string value);
    partial void OnareaChanged();
    partial void OncarreraChanging(string value);
    partial void OncarreraChanged();
    partial void OnclaveChanging(string value);
    partial void OnclaveChanged();
    #endregion
		
		public ProgramaEducativo()
		{
			this._ReporteTutoria = new EntitySet<ReporteTutoria>(new Action<ReporteTutoria>(this.attach_ReporteTutoria), new Action<ReporteTutoria>(this.detach_ReporteTutoria));
			this._Tutorado = new EntitySet<Tutorado>(new Action<Tutorado>(this.attach_Tutorado), new Action<Tutorado>(this.detach_Tutorado));
			this._Profesor = default(EntityRef<Profesor>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idProgramaEducativo", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idProgramaEducativo
		{
			get
			{
				return this._idProgramaEducativo;
			}
			set
			{
				if ((this._idProgramaEducativo != value))
				{
					this.OnidProgramaEducativoChanging(value);
					this.SendPropertyChanging();
					this._idProgramaEducativo = value;
					this.SendPropertyChanged("idProgramaEducativo");
					this.OnidProgramaEducativoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idCoordinador", DbType="Int NOT NULL")]
		public int idCoordinador
		{
			get
			{
				return this._idCoordinador;
			}
			set
			{
				if ((this._idCoordinador != value))
				{
					if (this._Profesor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidCoordinadorChanging(value);
					this.SendPropertyChanging();
					this._idCoordinador = value;
					this.SendPropertyChanged("idCoordinador");
					this.OnidCoordinadorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_anio", DbType="Int NOT NULL")]
		public int anio
		{
			get
			{
				return this._anio;
			}
			set
			{
				if ((this._anio != value))
				{
					this.OnanioChanging(value);
					this.SendPropertyChanging();
					this._anio = value;
					this.SendPropertyChanged("anio");
					this.OnanioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_area", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string area
		{
			get
			{
				return this._area;
			}
			set
			{
				if ((this._area != value))
				{
					this.OnareaChanging(value);
					this.SendPropertyChanging();
					this._area = value;
					this.SendPropertyChanged("area");
					this.OnareaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_carrera", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string carrera
		{
			get
			{
				return this._carrera;
			}
			set
			{
				if ((this._carrera != value))
				{
					this.OncarreraChanging(value);
					this.SendPropertyChanging();
					this._carrera = value;
					this.SendPropertyChanged("carrera");
					this.OncarreraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_clave", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string clave
		{
			get
			{
				return this._clave;
			}
			set
			{
				if ((this._clave != value))
				{
					this.OnclaveChanging(value);
					this.SendPropertyChanging();
					this._clave = value;
					this.SendPropertyChanged("clave");
					this.OnclaveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProgramaEducativo_ReporteTutoria", Storage="_ReporteTutoria", ThisKey="idProgramaEducativo", OtherKey="idProgramaEducativo")]
		public EntitySet<ReporteTutoria> ReporteTutoria
		{
			get
			{
				return this._ReporteTutoria;
			}
			set
			{
				this._ReporteTutoria.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProgramaEducativo_Tutorado", Storage="_Tutorado", ThisKey="idProgramaEducativo", OtherKey="idProgramaEducativo")]
		public EntitySet<Tutorado> Tutorado
		{
			get
			{
				return this._Tutorado;
			}
			set
			{
				this._Tutorado.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Profesor_ProgramaEducativo", Storage="_Profesor", ThisKey="idCoordinador", OtherKey="idProfesor", IsForeignKey=true)]
		public Profesor Profesor
		{
			get
			{
				return this._Profesor.Entity;
			}
			set
			{
				Profesor previousValue = this._Profesor.Entity;
				if (((previousValue != value) 
							|| (this._Profesor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Profesor.Entity = null;
						previousValue.ProgramaEducativo.Remove(this);
					}
					this._Profesor.Entity = value;
					if ((value != null))
					{
						value.ProgramaEducativo.Add(this);
						this._idCoordinador = value.idProfesor;
					}
					else
					{
						this._idCoordinador = default(int);
					}
					this.SendPropertyChanged("Profesor");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ReporteTutoria(ReporteTutoria entity)
		{
			this.SendPropertyChanging();
			entity.ProgramaEducativo = this;
		}
		
		private void detach_ReporteTutoria(ReporteTutoria entity)
		{
			this.SendPropertyChanging();
			entity.ProgramaEducativo = null;
		}
		
		private void attach_Tutorado(Tutorado entity)
		{
			this.SendPropertyChanging();
			entity.ProgramaEducativo = this;
		}
		
		private void detach_Tutorado(Tutorado entity)
		{
			this.SendPropertyChanging();
			entity.ProgramaEducativo = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ReporteTutoria")]
	public partial class ReporteTutoria : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idReporteTutoria;
		
		private string _descripcion;
		
		private int _idProgramaEducativo;
		
		private int _idTutoria;
		
		private int _idTutorado;
		
		private int _idTutor;
		
		private EntitySet<Problematica> _Problematica;
		
		private EntityRef<ProgramaEducativo> _ProgramaEducativo;
		
		private EntityRef<Profesor> _Profesor;
		
		private EntityRef<Tutorado> _Tutorado;
		
		private EntityRef<Tutoria> _Tutoria;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidReporteTutoriaChanging(int value);
    partial void OnidReporteTutoriaChanged();
    partial void OndescripcionChanging(string value);
    partial void OndescripcionChanged();
    partial void OnidProgramaEducativoChanging(int value);
    partial void OnidProgramaEducativoChanged();
    partial void OnidTutoriaChanging(int value);
    partial void OnidTutoriaChanged();
    partial void OnidTutoradoChanging(int value);
    partial void OnidTutoradoChanged();
    partial void OnidTutorChanging(int value);
    partial void OnidTutorChanged();
    #endregion
		
		public ReporteTutoria()
		{
			this._Problematica = new EntitySet<Problematica>(new Action<Problematica>(this.attach_Problematica), new Action<Problematica>(this.detach_Problematica));
			this._ProgramaEducativo = default(EntityRef<ProgramaEducativo>);
			this._Profesor = default(EntityRef<Profesor>);
			this._Tutorado = default(EntityRef<Tutorado>);
			this._Tutoria = default(EntityRef<Tutoria>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idReporteTutoria", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idReporteTutoria
		{
			get
			{
				return this._idReporteTutoria;
			}
			set
			{
				if ((this._idReporteTutoria != value))
				{
					this.OnidReporteTutoriaChanging(value);
					this.SendPropertyChanging();
					this._idReporteTutoria = value;
					this.SendPropertyChanged("idReporteTutoria");
					this.OnidReporteTutoriaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_descripcion", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string descripcion
		{
			get
			{
				return this._descripcion;
			}
			set
			{
				if ((this._descripcion != value))
				{
					this.OndescripcionChanging(value);
					this.SendPropertyChanging();
					this._descripcion = value;
					this.SendPropertyChanged("descripcion");
					this.OndescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idProgramaEducativo", DbType="Int NOT NULL")]
		public int idProgramaEducativo
		{
			get
			{
				return this._idProgramaEducativo;
			}
			set
			{
				if ((this._idProgramaEducativo != value))
				{
					if (this._ProgramaEducativo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidProgramaEducativoChanging(value);
					this.SendPropertyChanging();
					this._idProgramaEducativo = value;
					this.SendPropertyChanged("idProgramaEducativo");
					this.OnidProgramaEducativoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idTutoria", DbType="Int NOT NULL")]
		public int idTutoria
		{
			get
			{
				return this._idTutoria;
			}
			set
			{
				if ((this._idTutoria != value))
				{
					if (this._Tutoria.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidTutoriaChanging(value);
					this.SendPropertyChanging();
					this._idTutoria = value;
					this.SendPropertyChanged("idTutoria");
					this.OnidTutoriaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idTutorado", DbType="Int NOT NULL")]
		public int idTutorado
		{
			get
			{
				return this._idTutorado;
			}
			set
			{
				if ((this._idTutorado != value))
				{
					if (this._Tutorado.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidTutoradoChanging(value);
					this.SendPropertyChanging();
					this._idTutorado = value;
					this.SendPropertyChanged("idTutorado");
					this.OnidTutoradoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idTutor", DbType="Int NOT NULL")]
		public int idTutor
		{
			get
			{
				return this._idTutor;
			}
			set
			{
				if ((this._idTutor != value))
				{
					if (this._Profesor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidTutorChanging(value);
					this.SendPropertyChanging();
					this._idTutor = value;
					this.SendPropertyChanged("idTutor");
					this.OnidTutorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ReporteTutoria_Problematica", Storage="_Problematica", ThisKey="idReporteTutoria", OtherKey="idReporteTutoria")]
		public EntitySet<Problematica> Problematica
		{
			get
			{
				return this._Problematica;
			}
			set
			{
				this._Problematica.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProgramaEducativo_ReporteTutoria", Storage="_ProgramaEducativo", ThisKey="idProgramaEducativo", OtherKey="idProgramaEducativo", IsForeignKey=true)]
		public ProgramaEducativo ProgramaEducativo
		{
			get
			{
				return this._ProgramaEducativo.Entity;
			}
			set
			{
				ProgramaEducativo previousValue = this._ProgramaEducativo.Entity;
				if (((previousValue != value) 
							|| (this._ProgramaEducativo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProgramaEducativo.Entity = null;
						previousValue.ReporteTutoria.Remove(this);
					}
					this._ProgramaEducativo.Entity = value;
					if ((value != null))
					{
						value.ReporteTutoria.Add(this);
						this._idProgramaEducativo = value.idProgramaEducativo;
					}
					else
					{
						this._idProgramaEducativo = default(int);
					}
					this.SendPropertyChanged("ProgramaEducativo");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Profesor_ReporteTutoria", Storage="_Profesor", ThisKey="idTutor", OtherKey="idProfesor", IsForeignKey=true)]
		public Profesor Profesor
		{
			get
			{
				return this._Profesor.Entity;
			}
			set
			{
				Profesor previousValue = this._Profesor.Entity;
				if (((previousValue != value) 
							|| (this._Profesor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Profesor.Entity = null;
						previousValue.ReporteTutoria.Remove(this);
					}
					this._Profesor.Entity = value;
					if ((value != null))
					{
						value.ReporteTutoria.Add(this);
						this._idTutor = value.idProfesor;
					}
					else
					{
						this._idTutor = default(int);
					}
					this.SendPropertyChanged("Profesor");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tutorado_ReporteTutoria", Storage="_Tutorado", ThisKey="idTutorado", OtherKey="idTutorado", IsForeignKey=true)]
		public Tutorado Tutorado
		{
			get
			{
				return this._Tutorado.Entity;
			}
			set
			{
				Tutorado previousValue = this._Tutorado.Entity;
				if (((previousValue != value) 
							|| (this._Tutorado.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tutorado.Entity = null;
						previousValue.ReporteTutoria.Remove(this);
					}
					this._Tutorado.Entity = value;
					if ((value != null))
					{
						value.ReporteTutoria.Add(this);
						this._idTutorado = value.idTutorado;
					}
					else
					{
						this._idTutorado = default(int);
					}
					this.SendPropertyChanged("Tutorado");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tutoria_ReporteTutoria", Storage="_Tutoria", ThisKey="idTutoria", OtherKey="idTutoria", IsForeignKey=true)]
		public Tutoria Tutoria
		{
			get
			{
				return this._Tutoria.Entity;
			}
			set
			{
				Tutoria previousValue = this._Tutoria.Entity;
				if (((previousValue != value) 
							|| (this._Tutoria.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tutoria.Entity = null;
						previousValue.ReporteTutoria.Remove(this);
					}
					this._Tutoria.Entity = value;
					if ((value != null))
					{
						value.ReporteTutoria.Add(this);
						this._idTutoria = value.idTutoria;
					}
					else
					{
						this._idTutoria = default(int);
					}
					this.SendPropertyChanged("Tutoria");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Problematica(Problematica entity)
		{
			this.SendPropertyChanging();
			entity.ReporteTutoria = this;
		}
		
		private void detach_Problematica(Problematica entity)
		{
			this.SendPropertyChanging();
			entity.ReporteTutoria = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Rol")]
	public partial class Rol : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idRol;
		
		private bool _administrador;
		
		private bool _usuario;
		
		private bool _tutor;
		
		private bool _jefeDeCarrera;
		
		private bool _coordinadorDeTutoriasAcademicas;
		
		private EntitySet<Profesor> _Profesor;
		
		private EntitySet<UsuarioSesion> _UsuarioSesion;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidRolChanging(int value);
    partial void OnidRolChanged();
    partial void OnadministradorChanging(bool value);
    partial void OnadministradorChanged();
    partial void OnusuarioChanging(bool value);
    partial void OnusuarioChanged();
    partial void OntutorChanging(bool value);
    partial void OntutorChanged();
    partial void OnjefeDeCarreraChanging(bool value);
    partial void OnjefeDeCarreraChanged();
    partial void OncoordinadorDeTutoriasAcademicasChanging(bool value);
    partial void OncoordinadorDeTutoriasAcademicasChanged();
    #endregion
		
		public Rol()
		{
			this._Profesor = new EntitySet<Profesor>(new Action<Profesor>(this.attach_Profesor), new Action<Profesor>(this.detach_Profesor));
			this._UsuarioSesion = new EntitySet<UsuarioSesion>(new Action<UsuarioSesion>(this.attach_UsuarioSesion), new Action<UsuarioSesion>(this.detach_UsuarioSesion));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idRol", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idRol
		{
			get
			{
				return this._idRol;
			}
			set
			{
				if ((this._idRol != value))
				{
					this.OnidRolChanging(value);
					this.SendPropertyChanging();
					this._idRol = value;
					this.SendPropertyChanged("idRol");
					this.OnidRolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_administrador", DbType="Bit NOT NULL")]
		public bool administrador
		{
			get
			{
				return this._administrador;
			}
			set
			{
				if ((this._administrador != value))
				{
					this.OnadministradorChanging(value);
					this.SendPropertyChanging();
					this._administrador = value;
					this.SendPropertyChanged("administrador");
					this.OnadministradorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_usuario", DbType="Bit NOT NULL")]
		public bool usuario
		{
			get
			{
				return this._usuario;
			}
			set
			{
				if ((this._usuario != value))
				{
					this.OnusuarioChanging(value);
					this.SendPropertyChanging();
					this._usuario = value;
					this.SendPropertyChanged("usuario");
					this.OnusuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tutor", DbType="Bit NOT NULL")]
		public bool tutor
		{
			get
			{
				return this._tutor;
			}
			set
			{
				if ((this._tutor != value))
				{
					this.OntutorChanging(value);
					this.SendPropertyChanging();
					this._tutor = value;
					this.SendPropertyChanged("tutor");
					this.OntutorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_jefeDeCarrera", DbType="Bit NOT NULL")]
		public bool jefeDeCarrera
		{
			get
			{
				return this._jefeDeCarrera;
			}
			set
			{
				if ((this._jefeDeCarrera != value))
				{
					this.OnjefeDeCarreraChanging(value);
					this.SendPropertyChanging();
					this._jefeDeCarrera = value;
					this.SendPropertyChanged("jefeDeCarrera");
					this.OnjefeDeCarreraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_coordinadorDeTutoriasAcademicas", DbType="Bit NOT NULL")]
		public bool coordinadorDeTutoriasAcademicas
		{
			get
			{
				return this._coordinadorDeTutoriasAcademicas;
			}
			set
			{
				if ((this._coordinadorDeTutoriasAcademicas != value))
				{
					this.OncoordinadorDeTutoriasAcademicasChanging(value);
					this.SendPropertyChanging();
					this._coordinadorDeTutoriasAcademicas = value;
					this.SendPropertyChanged("coordinadorDeTutoriasAcademicas");
					this.OncoordinadorDeTutoriasAcademicasChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Rol_Profesor", Storage="_Profesor", ThisKey="idRol", OtherKey="idRol")]
		public EntitySet<Profesor> Profesor
		{
			get
			{
				return this._Profesor;
			}
			set
			{
				this._Profesor.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Rol_UsuarioSesion", Storage="_UsuarioSesion", ThisKey="idRol", OtherKey="idRol")]
		public EntitySet<UsuarioSesion> UsuarioSesion
		{
			get
			{
				return this._UsuarioSesion;
			}
			set
			{
				this._UsuarioSesion.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Profesor(Profesor entity)
		{
			this.SendPropertyChanging();
			entity.Rol = this;
		}
		
		private void detach_Profesor(Profesor entity)
		{
			this.SendPropertyChanging();
			entity.Rol = null;
		}
		
		private void attach_UsuarioSesion(UsuarioSesion entity)
		{
			this.SendPropertyChanging();
			entity.Rol = this;
		}
		
		private void detach_UsuarioSesion(UsuarioSesion entity)
		{
			this.SendPropertyChanging();
			entity.Rol = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Solucion")]
	public partial class Solucion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idSolucion;
		
		private int _idProblematica;
		
		private int _idAcademico;
		
		private int _idTutorado;
		
		private string _comentarios;
		
		private string _fechaSolucion;
		
		private EntityRef<Profesor> _Profesor;
		
		private EntityRef<Problematica> _Problematica;
		
		private EntityRef<Tutorado> _Tutorado;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidSolucionChanging(int value);
    partial void OnidSolucionChanged();
    partial void OnidProblematicaChanging(int value);
    partial void OnidProblematicaChanged();
    partial void OnidAcademicoChanging(int value);
    partial void OnidAcademicoChanged();
    partial void OnidTutoradoChanging(int value);
    partial void OnidTutoradoChanged();
    partial void OncomentariosChanging(string value);
    partial void OncomentariosChanged();
    partial void OnfechaSolucionChanging(string value);
    partial void OnfechaSolucionChanged();
    #endregion
		
		public Solucion()
		{
			this._Profesor = default(EntityRef<Profesor>);
			this._Problematica = default(EntityRef<Problematica>);
			this._Tutorado = default(EntityRef<Tutorado>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idSolucion", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idSolucion
		{
			get
			{
				return this._idSolucion;
			}
			set
			{
				if ((this._idSolucion != value))
				{
					this.OnidSolucionChanging(value);
					this.SendPropertyChanging();
					this._idSolucion = value;
					this.SendPropertyChanged("idSolucion");
					this.OnidSolucionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idProblematica", DbType="Int NOT NULL")]
		public int idProblematica
		{
			get
			{
				return this._idProblematica;
			}
			set
			{
				if ((this._idProblematica != value))
				{
					if (this._Problematica.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidProblematicaChanging(value);
					this.SendPropertyChanging();
					this._idProblematica = value;
					this.SendPropertyChanged("idProblematica");
					this.OnidProblematicaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idAcademico", DbType="Int NOT NULL")]
		public int idAcademico
		{
			get
			{
				return this._idAcademico;
			}
			set
			{
				if ((this._idAcademico != value))
				{
					if (this._Profesor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidAcademicoChanging(value);
					this.SendPropertyChanging();
					this._idAcademico = value;
					this.SendPropertyChanged("idAcademico");
					this.OnidAcademicoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idTutorado", DbType="Int NOT NULL")]
		public int idTutorado
		{
			get
			{
				return this._idTutorado;
			}
			set
			{
				if ((this._idTutorado != value))
				{
					if (this._Tutorado.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidTutoradoChanging(value);
					this.SendPropertyChanging();
					this._idTutorado = value;
					this.SendPropertyChanged("idTutorado");
					this.OnidTutoradoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_comentarios", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string comentarios
		{
			get
			{
				return this._comentarios;
			}
			set
			{
				if ((this._comentarios != value))
				{
					this.OncomentariosChanging(value);
					this.SendPropertyChanging();
					this._comentarios = value;
					this.SendPropertyChanged("comentarios");
					this.OncomentariosChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fechaSolucion", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string fechaSolucion
		{
			get
			{
				return this._fechaSolucion;
			}
			set
			{
				if ((this._fechaSolucion != value))
				{
					this.OnfechaSolucionChanging(value);
					this.SendPropertyChanging();
					this._fechaSolucion = value;
					this.SendPropertyChanged("fechaSolucion");
					this.OnfechaSolucionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Profesor_Solucion", Storage="_Profesor", ThisKey="idAcademico", OtherKey="idProfesor", IsForeignKey=true)]
		public Profesor Profesor
		{
			get
			{
				return this._Profesor.Entity;
			}
			set
			{
				Profesor previousValue = this._Profesor.Entity;
				if (((previousValue != value) 
							|| (this._Profesor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Profesor.Entity = null;
						previousValue.Solucion.Remove(this);
					}
					this._Profesor.Entity = value;
					if ((value != null))
					{
						value.Solucion.Add(this);
						this._idAcademico = value.idProfesor;
					}
					else
					{
						this._idAcademico = default(int);
					}
					this.SendPropertyChanged("Profesor");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Problematica_Solucion", Storage="_Problematica", ThisKey="idProblematica", OtherKey="idProblematica", IsForeignKey=true)]
		public Problematica Problematica
		{
			get
			{
				return this._Problematica.Entity;
			}
			set
			{
				Problematica previousValue = this._Problematica.Entity;
				if (((previousValue != value) 
							|| (this._Problematica.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Problematica.Entity = null;
						previousValue.Solucion.Remove(this);
					}
					this._Problematica.Entity = value;
					if ((value != null))
					{
						value.Solucion.Add(this);
						this._idProblematica = value.idProblematica;
					}
					else
					{
						this._idProblematica = default(int);
					}
					this.SendPropertyChanged("Problematica");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tutorado_Solucion", Storage="_Tutorado", ThisKey="idTutorado", OtherKey="idTutorado", IsForeignKey=true)]
		public Tutorado Tutorado
		{
			get
			{
				return this._Tutorado.Entity;
			}
			set
			{
				Tutorado previousValue = this._Tutorado.Entity;
				if (((previousValue != value) 
							|| (this._Tutorado.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tutorado.Entity = null;
						previousValue.Solucion.Remove(this);
					}
					this._Tutorado.Entity = value;
					if ((value != null))
					{
						value.Solucion.Add(this);
						this._idTutorado = value.idTutorado;
					}
					else
					{
						this._idTutorado = default(int);
					}
					this.SendPropertyChanged("Tutorado");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TipoProblematica")]
	public partial class TipoProblematica : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idTipoProblematica;
		
		private string _tipoProblematica1;
		
		private EntitySet<Problematica> _Problematica;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidTipoProblematicaChanging(int value);
    partial void OnidTipoProblematicaChanged();
    partial void OntipoProblematica1Changing(string value);
    partial void OntipoProblematica1Changed();
    #endregion
		
		public TipoProblematica()
		{
			this._Problematica = new EntitySet<Problematica>(new Action<Problematica>(this.attach_Problematica), new Action<Problematica>(this.detach_Problematica));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idTipoProblematica", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idTipoProblematica
		{
			get
			{
				return this._idTipoProblematica;
			}
			set
			{
				if ((this._idTipoProblematica != value))
				{
					this.OnidTipoProblematicaChanging(value);
					this.SendPropertyChanging();
					this._idTipoProblematica = value;
					this.SendPropertyChanged("idTipoProblematica");
					this.OnidTipoProblematicaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="tipoProblematica", Storage="_tipoProblematica1", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string tipoProblematica1
		{
			get
			{
				return this._tipoProblematica1;
			}
			set
			{
				if ((this._tipoProblematica1 != value))
				{
					this.OntipoProblematica1Changing(value);
					this.SendPropertyChanging();
					this._tipoProblematica1 = value;
					this.SendPropertyChanged("tipoProblematica1");
					this.OntipoProblematica1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TipoProblematica_Problematica", Storage="_Problematica", ThisKey="idTipoProblematica", OtherKey="idTipo")]
		public EntitySet<Problematica> Problematica
		{
			get
			{
				return this._Problematica;
			}
			set
			{
				this._Problematica.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Problematica(Problematica entity)
		{
			this.SendPropertyChanging();
			entity.TipoProblematica = this;
		}
		
		private void detach_Problematica(Problematica entity)
		{
			this.SendPropertyChanging();
			entity.TipoProblematica = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tutorado")]
	public partial class Tutorado : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idTutorado;
		
		private int _idProgramaEducativo;
		
		private int _tutorAcademico;
		
		private bool _estaActivo;
		
		private bool _estaEnRiesgo;
		
		private string _nombre;
		
		private string _matricula;
		
		private string _telefono;
		
		private int _numeroCambiosTutor;
		
		private EntitySet<ReporteTutoria> _ReporteTutoria;
		
		private EntitySet<Solucion> _Solucion;
		
		private EntitySet<Tutoria> _Tutoria;
		
		private EntitySet<HorarioTutoria> _HorarioTutorias;
		
		private EntityRef<ProgramaEducativo> _ProgramaEducativo;
		
		private EntityRef<Profesor> _Profesor;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidTutoradoChanging(int value);
    partial void OnidTutoradoChanged();
    partial void OnidProgramaEducativoChanging(int value);
    partial void OnidProgramaEducativoChanged();
    partial void OntutorAcademicoChanging(int value);
    partial void OntutorAcademicoChanged();
    partial void OnestaActivoChanging(bool value);
    partial void OnestaActivoChanged();
    partial void OnestaEnRiesgoChanging(bool value);
    partial void OnestaEnRiesgoChanged();
    partial void OnnombreChanging(string value);
    partial void OnnombreChanged();
    partial void OnmatriculaChanging(string value);
    partial void OnmatriculaChanged();
    partial void OntelefonoChanging(string value);
    partial void OntelefonoChanged();
    partial void OnnumeroCambiosTutorChanging(int value);
    partial void OnnumeroCambiosTutorChanged();
    #endregion
		
		public Tutorado()
		{
			this._ReporteTutoria = new EntitySet<ReporteTutoria>(new Action<ReporteTutoria>(this.attach_ReporteTutoria), new Action<ReporteTutoria>(this.detach_ReporteTutoria));
			this._Solucion = new EntitySet<Solucion>(new Action<Solucion>(this.attach_Solucion), new Action<Solucion>(this.detach_Solucion));
			this._Tutoria = new EntitySet<Tutoria>(new Action<Tutoria>(this.attach_Tutoria), new Action<Tutoria>(this.detach_Tutoria));
			this._HorarioTutorias = new EntitySet<HorarioTutoria>(new Action<HorarioTutoria>(this.attach_HorarioTutorias), new Action<HorarioTutoria>(this.detach_HorarioTutorias));
			this._ProgramaEducativo = default(EntityRef<ProgramaEducativo>);
			this._Profesor = default(EntityRef<Profesor>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idTutorado", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idTutorado
		{
			get
			{
				return this._idTutorado;
			}
			set
			{
				if ((this._idTutorado != value))
				{
					this.OnidTutoradoChanging(value);
					this.SendPropertyChanging();
					this._idTutorado = value;
					this.SendPropertyChanged("idTutorado");
					this.OnidTutoradoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idProgramaEducativo", DbType="Int NOT NULL")]
		public int idProgramaEducativo
		{
			get
			{
				return this._idProgramaEducativo;
			}
			set
			{
				if ((this._idProgramaEducativo != value))
				{
					if (this._ProgramaEducativo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidProgramaEducativoChanging(value);
					this.SendPropertyChanging();
					this._idProgramaEducativo = value;
					this.SendPropertyChanged("idProgramaEducativo");
					this.OnidProgramaEducativoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tutorAcademico", DbType="Int NOT NULL")]
		public int tutorAcademico
		{
			get
			{
				return this._tutorAcademico;
			}
			set
			{
				if ((this._tutorAcademico != value))
				{
					if (this._Profesor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OntutorAcademicoChanging(value);
					this.SendPropertyChanging();
					this._tutorAcademico = value;
					this.SendPropertyChanged("tutorAcademico");
					this.OntutorAcademicoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_estaActivo", DbType="Bit NOT NULL")]
		public bool estaActivo
		{
			get
			{
				return this._estaActivo;
			}
			set
			{
				if ((this._estaActivo != value))
				{
					this.OnestaActivoChanging(value);
					this.SendPropertyChanging();
					this._estaActivo = value;
					this.SendPropertyChanged("estaActivo");
					this.OnestaActivoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_estaEnRiesgo", DbType="Bit NOT NULL")]
		public bool estaEnRiesgo
		{
			get
			{
				return this._estaEnRiesgo;
			}
			set
			{
				if ((this._estaEnRiesgo != value))
				{
					this.OnestaEnRiesgoChanging(value);
					this.SendPropertyChanging();
					this._estaEnRiesgo = value;
					this.SendPropertyChanged("estaEnRiesgo");
					this.OnestaEnRiesgoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nombre", DbType="VarChar(75) NOT NULL", CanBeNull=false)]
		public string nombre
		{
			get
			{
				return this._nombre;
			}
			set
			{
				if ((this._nombre != value))
				{
					this.OnnombreChanging(value);
					this.SendPropertyChanging();
					this._nombre = value;
					this.SendPropertyChanged("nombre");
					this.OnnombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_matricula", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string matricula
		{
			get
			{
				return this._matricula;
			}
			set
			{
				if ((this._matricula != value))
				{
					this.OnmatriculaChanging(value);
					this.SendPropertyChanging();
					this._matricula = value;
					this.SendPropertyChanged("matricula");
					this.OnmatriculaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_telefono", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string telefono
		{
			get
			{
				return this._telefono;
			}
			set
			{
				if ((this._telefono != value))
				{
					this.OntelefonoChanging(value);
					this.SendPropertyChanging();
					this._telefono = value;
					this.SendPropertyChanged("telefono");
					this.OntelefonoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_numeroCambiosTutor", DbType="Int NOT NULL")]
		public int numeroCambiosTutor
		{
			get
			{
				return this._numeroCambiosTutor;
			}
			set
			{
				if ((this._numeroCambiosTutor != value))
				{
					this.OnnumeroCambiosTutorChanging(value);
					this.SendPropertyChanging();
					this._numeroCambiosTutor = value;
					this.SendPropertyChanged("numeroCambiosTutor");
					this.OnnumeroCambiosTutorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tutorado_ReporteTutoria", Storage="_ReporteTutoria", ThisKey="idTutorado", OtherKey="idTutorado")]
		public EntitySet<ReporteTutoria> ReporteTutoria
		{
			get
			{
				return this._ReporteTutoria;
			}
			set
			{
				this._ReporteTutoria.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tutorado_Solucion", Storage="_Solucion", ThisKey="idTutorado", OtherKey="idTutorado")]
		public EntitySet<Solucion> Solucion
		{
			get
			{
				return this._Solucion;
			}
			set
			{
				this._Solucion.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tutorado_Tutoria", Storage="_Tutoria", ThisKey="idTutorado", OtherKey="idTutorado")]
		public EntitySet<Tutoria> Tutoria
		{
			get
			{
				return this._Tutoria;
			}
			set
			{
				this._Tutoria.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tutorado_HorarioTutoria", Storage="_HorarioTutorias", ThisKey="idTutorado", OtherKey="idTutorado")]
		public EntitySet<HorarioTutoria> HorarioTutorias
		{
			get
			{
				return this._HorarioTutorias;
			}
			set
			{
				this._HorarioTutorias.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProgramaEducativo_Tutorado", Storage="_ProgramaEducativo", ThisKey="idProgramaEducativo", OtherKey="idProgramaEducativo", IsForeignKey=true)]
		public ProgramaEducativo ProgramaEducativo
		{
			get
			{
				return this._ProgramaEducativo.Entity;
			}
			set
			{
				ProgramaEducativo previousValue = this._ProgramaEducativo.Entity;
				if (((previousValue != value) 
							|| (this._ProgramaEducativo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProgramaEducativo.Entity = null;
						previousValue.Tutorado.Remove(this);
					}
					this._ProgramaEducativo.Entity = value;
					if ((value != null))
					{
						value.Tutorado.Add(this);
						this._idProgramaEducativo = value.idProgramaEducativo;
					}
					else
					{
						this._idProgramaEducativo = default(int);
					}
					this.SendPropertyChanged("ProgramaEducativo");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Profesor_Tutorado", Storage="_Profesor", ThisKey="tutorAcademico", OtherKey="idProfesor", IsForeignKey=true)]
		public Profesor Profesor
		{
			get
			{
				return this._Profesor.Entity;
			}
			set
			{
				Profesor previousValue = this._Profesor.Entity;
				if (((previousValue != value) 
							|| (this._Profesor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Profesor.Entity = null;
						previousValue.Tutorado.Remove(this);
					}
					this._Profesor.Entity = value;
					if ((value != null))
					{
						value.Tutorado.Add(this);
						this._tutorAcademico = value.idProfesor;
					}
					else
					{
						this._tutorAcademico = default(int);
					}
					this.SendPropertyChanged("Profesor");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ReporteTutoria(ReporteTutoria entity)
		{
			this.SendPropertyChanging();
			entity.Tutorado = this;
		}
		
		private void detach_ReporteTutoria(ReporteTutoria entity)
		{
			this.SendPropertyChanging();
			entity.Tutorado = null;
		}
		
		private void attach_Solucion(Solucion entity)
		{
			this.SendPropertyChanging();
			entity.Tutorado = this;
		}
		
		private void detach_Solucion(Solucion entity)
		{
			this.SendPropertyChanging();
			entity.Tutorado = null;
		}
		
		private void attach_Tutoria(Tutoria entity)
		{
			this.SendPropertyChanging();
			entity.Tutorado = this;
		}
		
		private void detach_Tutoria(Tutoria entity)
		{
			this.SendPropertyChanging();
			entity.Tutorado = null;
		}
		
		private void attach_HorarioTutorias(HorarioTutoria entity)
		{
			this.SendPropertyChanging();
			entity.Tutorado = this;
		}
		
		private void detach_HorarioTutorias(HorarioTutoria entity)
		{
			this.SendPropertyChanging();
			entity.Tutorado = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tutoria")]
	public partial class Tutoria : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idTutoria;
		
		private int _idTutorado;
		
		private int _idInformacionTutoria;
		
		private int _idTutor;
		
		private EntitySet<ReporteTutoria> _ReporteTutoria;
		
		private EntitySet<HorarioTutoria> _HorarioTutorias;
		
		private EntityRef<InformacionTutoria> _InformacionTutoria;
		
		private EntityRef<Tutorado> _Tutorado;
		
		private EntityRef<Profesor> _Profesor;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidTutoriaChanging(int value);
    partial void OnidTutoriaChanged();
    partial void OnidTutoradoChanging(int value);
    partial void OnidTutoradoChanged();
    partial void OnidInformacionTutoriaChanging(int value);
    partial void OnidInformacionTutoriaChanged();
    partial void OnidTutorChanging(int value);
    partial void OnidTutorChanged();
    #endregion
		
		public Tutoria()
		{
			this._ReporteTutoria = new EntitySet<ReporteTutoria>(new Action<ReporteTutoria>(this.attach_ReporteTutoria), new Action<ReporteTutoria>(this.detach_ReporteTutoria));
			this._HorarioTutorias = new EntitySet<HorarioTutoria>(new Action<HorarioTutoria>(this.attach_HorarioTutorias), new Action<HorarioTutoria>(this.detach_HorarioTutorias));
			this._InformacionTutoria = default(EntityRef<InformacionTutoria>);
			this._Tutorado = default(EntityRef<Tutorado>);
			this._Profesor = default(EntityRef<Profesor>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idTutoria", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idTutoria
		{
			get
			{
				return this._idTutoria;
			}
			set
			{
				if ((this._idTutoria != value))
				{
					this.OnidTutoriaChanging(value);
					this.SendPropertyChanging();
					this._idTutoria = value;
					this.SendPropertyChanged("idTutoria");
					this.OnidTutoriaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idTutorado", DbType="Int NOT NULL")]
		public int idTutorado
		{
			get
			{
				return this._idTutorado;
			}
			set
			{
				if ((this._idTutorado != value))
				{
					if (this._Tutorado.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidTutoradoChanging(value);
					this.SendPropertyChanging();
					this._idTutorado = value;
					this.SendPropertyChanged("idTutorado");
					this.OnidTutoradoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idInformacionTutoria", DbType="Int NOT NULL")]
		public int idInformacionTutoria
		{
			get
			{
				return this._idInformacionTutoria;
			}
			set
			{
				if ((this._idInformacionTutoria != value))
				{
					if (this._InformacionTutoria.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidInformacionTutoriaChanging(value);
					this.SendPropertyChanging();
					this._idInformacionTutoria = value;
					this.SendPropertyChanged("idInformacionTutoria");
					this.OnidInformacionTutoriaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idTutor", DbType="Int NOT NULL")]
		public int idTutor
		{
			get
			{
				return this._idTutor;
			}
			set
			{
				if ((this._idTutor != value))
				{
					if (this._Profesor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidTutorChanging(value);
					this.SendPropertyChanging();
					this._idTutor = value;
					this.SendPropertyChanged("idTutor");
					this.OnidTutorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tutoria_ReporteTutoria", Storage="_ReporteTutoria", ThisKey="idTutoria", OtherKey="idTutoria")]
		public EntitySet<ReporteTutoria> ReporteTutoria
		{
			get
			{
				return this._ReporteTutoria;
			}
			set
			{
				this._ReporteTutoria.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tutoria_HorarioTutoria", Storage="_HorarioTutorias", ThisKey="idTutoria", OtherKey="idTutoria")]
		public EntitySet<HorarioTutoria> HorarioTutorias
		{
			get
			{
				return this._HorarioTutorias;
			}
			set
			{
				this._HorarioTutorias.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InformacionTutoria_Tutoria", Storage="_InformacionTutoria", ThisKey="idInformacionTutoria", OtherKey="idInformacionTutoria", IsForeignKey=true)]
		public InformacionTutoria InformacionTutoria
		{
			get
			{
				return this._InformacionTutoria.Entity;
			}
			set
			{
				InformacionTutoria previousValue = this._InformacionTutoria.Entity;
				if (((previousValue != value) 
							|| (this._InformacionTutoria.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._InformacionTutoria.Entity = null;
						previousValue.Tutoria.Remove(this);
					}
					this._InformacionTutoria.Entity = value;
					if ((value != null))
					{
						value.Tutoria.Add(this);
						this._idInformacionTutoria = value.idInformacionTutoria;
					}
					else
					{
						this._idInformacionTutoria = default(int);
					}
					this.SendPropertyChanged("InformacionTutoria");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tutorado_Tutoria", Storage="_Tutorado", ThisKey="idTutorado", OtherKey="idTutorado", IsForeignKey=true)]
		public Tutorado Tutorado
		{
			get
			{
				return this._Tutorado.Entity;
			}
			set
			{
				Tutorado previousValue = this._Tutorado.Entity;
				if (((previousValue != value) 
							|| (this._Tutorado.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tutorado.Entity = null;
						previousValue.Tutoria.Remove(this);
					}
					this._Tutorado.Entity = value;
					if ((value != null))
					{
						value.Tutoria.Add(this);
						this._idTutorado = value.idTutorado;
					}
					else
					{
						this._idTutorado = default(int);
					}
					this.SendPropertyChanged("Tutorado");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Profesor_Tutoria", Storage="_Profesor", ThisKey="idTutor", OtherKey="idProfesor", IsForeignKey=true)]
		public Profesor Profesor
		{
			get
			{
				return this._Profesor.Entity;
			}
			set
			{
				Profesor previousValue = this._Profesor.Entity;
				if (((previousValue != value) 
							|| (this._Profesor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Profesor.Entity = null;
						previousValue.Tutoria.Remove(this);
					}
					this._Profesor.Entity = value;
					if ((value != null))
					{
						value.Tutoria.Add(this);
						this._idTutor = value.idProfesor;
					}
					else
					{
						this._idTutor = default(int);
					}
					this.SendPropertyChanged("Profesor");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ReporteTutoria(ReporteTutoria entity)
		{
			this.SendPropertyChanging();
			entity.Tutoria = this;
		}
		
		private void detach_ReporteTutoria(ReporteTutoria entity)
		{
			this.SendPropertyChanging();
			entity.Tutoria = null;
		}
		
		private void attach_HorarioTutorias(HorarioTutoria entity)
		{
			this.SendPropertyChanging();
			entity.Tutoria = this;
		}
		
		private void detach_HorarioTutorias(HorarioTutoria entity)
		{
			this.SendPropertyChanging();
			entity.Tutoria = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UsuarioSesion")]
	public partial class UsuarioSesion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idUsuario;
		
		private int _idRol;
		
		private string _username;
		
		private string _contraseña;
		
		private string _nombre;
		
		private EntityRef<Rol> _Rol;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidUsuarioChanging(int value);
    partial void OnidUsuarioChanged();
    partial void OnidRolChanging(int value);
    partial void OnidRolChanged();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void OncontraseñaChanging(string value);
    partial void OncontraseñaChanged();
    partial void OnnombreChanging(string value);
    partial void OnnombreChanged();
    #endregion
		
		public UsuarioSesion()
		{
			this._Rol = default(EntityRef<Rol>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idUsuario", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idUsuario
		{
			get
			{
				return this._idUsuario;
			}
			set
			{
				if ((this._idUsuario != value))
				{
					this.OnidUsuarioChanging(value);
					this.SendPropertyChanging();
					this._idUsuario = value;
					this.SendPropertyChanged("idUsuario");
					this.OnidUsuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idRol", DbType="Int NOT NULL")]
		public int idRol
		{
			get
			{
				return this._idRol;
			}
			set
			{
				if ((this._idRol != value))
				{
					if (this._Rol.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidRolChanging(value);
					this.SendPropertyChanging();
					this._idRol = value;
					this.SendPropertyChanged("idRol");
					this.OnidRolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					this.OnusernameChanging(value);
					this.SendPropertyChanging();
					this._username = value;
					this.SendPropertyChanged("username");
					this.OnusernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_contraseña", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string contraseña
		{
			get
			{
				return this._contraseña;
			}
			set
			{
				if ((this._contraseña != value))
				{
					this.OncontraseñaChanging(value);
					this.SendPropertyChanging();
					this._contraseña = value;
					this.SendPropertyChanged("contraseña");
					this.OncontraseñaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nombre", DbType="VarChar(75) NOT NULL", CanBeNull=false)]
		public string nombre
		{
			get
			{
				return this._nombre;
			}
			set
			{
				if ((this._nombre != value))
				{
					this.OnnombreChanging(value);
					this.SendPropertyChanging();
					this._nombre = value;
					this.SendPropertyChanged("nombre");
					this.OnnombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Rol_UsuarioSesion", Storage="_Rol", ThisKey="idRol", OtherKey="idRol", IsForeignKey=true)]
		public Rol Rol
		{
			get
			{
				return this._Rol.Entity;
			}
			set
			{
				Rol previousValue = this._Rol.Entity;
				if (((previousValue != value) 
							|| (this._Rol.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Rol.Entity = null;
						previousValue.UsuarioSesion.Remove(this);
					}
					this._Rol.Entity = value;
					if ((value != null))
					{
						value.UsuarioSesion.Add(this);
						this._idRol = value.idRol;
					}
					else
					{
						this._idRol = default(int);
					}
					this.SendPropertyChanged("Rol");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HorarioTutoria")]
	public partial class HorarioTutoria : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idHorarioTutoria;
		
		private System.Nullable<System.DateTime> _horarioTutoria1;
		
		private int _idTutoria;
		
		private int _idTutorado;
		
		private int _idTutor;
		
		private EntityRef<Tutoria> _Tutoria;
		
		private EntityRef<Tutorado> _Tutorado;
		
		private EntityRef<Profesor> _Profesor;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidHorarioTutoriaChanging(int value);
    partial void OnidHorarioTutoriaChanged();
    partial void OnhorarioTutoria1Changing(System.Nullable<System.DateTime> value);
    partial void OnhorarioTutoria1Changed();
    partial void OnidTutoriaChanging(int value);
    partial void OnidTutoriaChanged();
    partial void OnidTutoradoChanging(int value);
    partial void OnidTutoradoChanged();
    partial void OnidTutorChanging(int value);
    partial void OnidTutorChanged();
    #endregion
		
		public HorarioTutoria()
		{
			this._Tutoria = default(EntityRef<Tutoria>);
			this._Tutorado = default(EntityRef<Tutorado>);
			this._Profesor = default(EntityRef<Profesor>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idHorarioTutoria", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idHorarioTutoria
		{
			get
			{
				return this._idHorarioTutoria;
			}
			set
			{
				if ((this._idHorarioTutoria != value))
				{
					this.OnidHorarioTutoriaChanging(value);
					this.SendPropertyChanging();
					this._idHorarioTutoria = value;
					this.SendPropertyChanged("idHorarioTutoria");
					this.OnidHorarioTutoriaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="horarioTutoria", Storage="_horarioTutoria1", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> horarioTutoria1
		{
			get
			{
				return this._horarioTutoria1;
			}
			set
			{
				if ((this._horarioTutoria1 != value))
				{
					this.OnhorarioTutoria1Changing(value);
					this.SendPropertyChanging();
					this._horarioTutoria1 = value;
					this.SendPropertyChanged("horarioTutoria1");
					this.OnhorarioTutoria1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idTutoria", DbType="Int NOT NULL")]
		public int idTutoria
		{
			get
			{
				return this._idTutoria;
			}
			set
			{
				if ((this._idTutoria != value))
				{
					if (this._Tutoria.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidTutoriaChanging(value);
					this.SendPropertyChanging();
					this._idTutoria = value;
					this.SendPropertyChanged("idTutoria");
					this.OnidTutoriaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idTutorado", DbType="Int NOT NULL")]
		public int idTutorado
		{
			get
			{
				return this._idTutorado;
			}
			set
			{
				if ((this._idTutorado != value))
				{
					if (this._Tutorado.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidTutoradoChanging(value);
					this.SendPropertyChanging();
					this._idTutorado = value;
					this.SendPropertyChanged("idTutorado");
					this.OnidTutoradoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idTutor", DbType="Int NOT NULL")]
		public int idTutor
		{
			get
			{
				return this._idTutor;
			}
			set
			{
				if ((this._idTutor != value))
				{
					if (this._Profesor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidTutorChanging(value);
					this.SendPropertyChanging();
					this._idTutor = value;
					this.SendPropertyChanged("idTutor");
					this.OnidTutorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tutoria_HorarioTutoria", Storage="_Tutoria", ThisKey="idTutoria", OtherKey="idTutoria", IsForeignKey=true)]
		public Tutoria Tutoria
		{
			get
			{
				return this._Tutoria.Entity;
			}
			set
			{
				Tutoria previousValue = this._Tutoria.Entity;
				if (((previousValue != value) 
							|| (this._Tutoria.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tutoria.Entity = null;
						previousValue.HorarioTutorias.Remove(this);
					}
					this._Tutoria.Entity = value;
					if ((value != null))
					{
						value.HorarioTutorias.Add(this);
						this._idTutoria = value.idTutoria;
					}
					else
					{
						this._idTutoria = default(int);
					}
					this.SendPropertyChanged("Tutoria");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tutorado_HorarioTutoria", Storage="_Tutorado", ThisKey="idTutorado", OtherKey="idTutorado", IsForeignKey=true)]
		public Tutorado Tutorado
		{
			get
			{
				return this._Tutorado.Entity;
			}
			set
			{
				Tutorado previousValue = this._Tutorado.Entity;
				if (((previousValue != value) 
							|| (this._Tutorado.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tutorado.Entity = null;
						previousValue.HorarioTutorias.Remove(this);
					}
					this._Tutorado.Entity = value;
					if ((value != null))
					{
						value.HorarioTutorias.Add(this);
						this._idTutorado = value.idTutorado;
					}
					else
					{
						this._idTutorado = default(int);
					}
					this.SendPropertyChanged("Tutorado");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Profesor_HorarioTutoria", Storage="_Profesor", ThisKey="idTutor", OtherKey="idProfesor", IsForeignKey=true)]
		public Profesor Profesor
		{
			get
			{
				return this._Profesor.Entity;
			}
			set
			{
				Profesor previousValue = this._Profesor.Entity;
				if (((previousValue != value) 
							|| (this._Profesor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Profesor.Entity = null;
						previousValue.HorarioTutorias.Remove(this);
					}
					this._Profesor.Entity = value;
					if ((value != null))
					{
						value.HorarioTutorias.Add(this);
						this._idTutor = value.idProfesor;
					}
					else
					{
						this._idTutor = default(int);
					}
					this.SendPropertyChanged("Profesor");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
